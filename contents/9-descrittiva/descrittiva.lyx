#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\begin_preamble


\title{Logica e Algebra 2}

\usepackage[english]{babel}
\usepackage{tikz}

\usepackage{settings/usefulMacros} 

\usepackage{booktabs}\usepackage{listings}\lstset{columns=fullflexible}

\usepackage{wasysym}

\usepackage{amsthm}\newtheoremstyle{note} % name
{\topsep} 	% Space above
{\topsep} 	% Space below
{\small}		% Body font
{}		% Indent amount
{\small\bfseries}% Theorem head font
{:}		% Punctuation after theorem head
{.5em}	% Space after theorem head
{}		% Theorem head spec (can be left empty, meaning ‘normal’)

\usepackage{fancyhdr}%% Cambia il carattere delle didascalie delle figure %%
\usepackage[font=small,format=plain,labelfont=bf,up,textfont=it,up]{caption}

\usepackage{comment}

%per le tabelle lunghe e particolari
\usepackage{lscape}



\usepackage{babel}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language italian
\language_package default
\inputencoding utf8
\fontencoding T1
\font_roman default
\font_sans default
\font_typewriter mathpazo
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing single
\use_hyperref true
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 2
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Logiche Descrittive	
\end_layout

\begin_layout Section
Introduzione - Logica AL
\end_layout

\begin_layout Standard
Le DL sono una famiglia di logiche per la rappresentazione della conoscenza
 che possono essere utilizzate per rappresentare conoscenza terminologica,
 dando ad essa una semantica formale ben definita.
\end_layout

\begin_layout Standard
Un sistema di rappresentazione della conoscenza (KR) fornisce i mezzi per
 definire, gestire, manipolare e ragionare su basi di conoscenza (KB).
\end_layout

\begin_layout Standard
In una KB ci sono TBox e ABox
\end_layout

\begin_layout Standard
I TBox descrivono la terminologia della KB (concetti, ruoli atomici e concetti
 composti), gli ABox sono asserzioni su individui della KB
\end_layout

\begin_layout Standard
TBox es.
 
\begin_inset Formula $Madre\equiv Donna\sqcap Genitore$
\end_inset


\end_layout

\begin_layout Standard
ABox es.
 
\begin_inset Formula $Donna(Paola)$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La famiglia di logiche descrittive più utilizzata è la famiglia AL (Attributive
 Language).
\end_layout

\begin_layout Standard
Nella logica AL (logica descrittiva tra le più semplici) ci sono:
\end_layout

\begin_layout Description
A,B,C concetti
\end_layout

\begin_layout Description
R ruoli
\end_layout

\begin_layout Description
		
\begin_inset Formula $\neg$
\end_inset

 negazione (solo di concetti atomici)
\end_layout

\begin_layout Description
\begin_inset Formula $\sqcap$
\end_inset

 di concetti
\end_layout

\begin_layout Description

\series medium
I concetti sono:
\end_layout

\begin_layout Itemize
Concetti atomici A,B
\end_layout

\begin_layout Itemize
\begin_inset Formula $\top$
\end_inset

, 
\begin_inset Formula $\bot$
\end_inset


\end_layout

\begin_layout Itemize
negazione di concetti atomici: 
\begin_inset Formula $\neg A$
\end_inset


\end_layout

\begin_layout Itemize
and di concetti: 
\begin_inset Formula $C\sqcap D$
\end_inset


\end_layout

\begin_layout Itemize
quantificazioni: 
\begin_inset Formula $\forall R.C$
\end_inset

, 
\begin_inset Formula $\exists R.\top$
\end_inset


\end_layout

\begin_layout Standard
Un'interpretazione I di una base di conoscenza ́e una coppia 
\begin_inset Formula $I=<\Delta^{i},·^{I}>$
\end_inset

 composta da un dominio di interpretazione 
\begin_inset Formula $\Delta$
\end_inset

I, detto dominio di I e da una funzione di interpretazione 
\begin_inset Formula $·^{I}$
\end_inset

 che associa:
\end_layout

\begin_layout Standard
ad ogni 
\series bold
nome
\series default
 di individuo un elemento: 
\end_layout

\begin_layout Standard
\begin_inset Formula $a^{I}\in\Delta^{I}$
\end_inset


\end_layout

\begin_layout Standard
ad ogni 
\series bold
concetto
\series default
 C un sottoinsieme di 
\begin_inset Formula $\Delta^{I}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $I:\ C\rightarrow C^{I}\subseteq\Delta^{I}$
\end_inset


\end_layout

\begin_layout Standard
e ad ogni 
\series bold
ruolo
\series default
 un sottoinsieme di 
\begin_inset Formula $\Delta$
\end_inset

I × 
\begin_inset Formula $\Delta$
\end_inset

I :
\end_layout

\begin_layout Standard
\begin_inset Formula $R:\ R^{I}\subseteq\Delta^{I}\times\Delta^{I}$
\end_inset


\end_layout

\begin_layout Standard
I rouli sono quindi relazioni binarie, una volta interpretati
\end_layout

\begin_layout Standard
es.
 
\begin_inset Formula $(Peter,\ Chris)^{I}\in HaFiglio^{I}$
\end_inset


\end_layout

\begin_layout Standard
		
\end_layout

\begin_layout Standard
Inoltre:
\end_layout

\begin_layout Standard
\begin_inset Formula $\bot^{I}=\emptyset$
\end_inset

, 
\begin_inset Formula $\top^{I}=\Delta^{I}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $(C\sqcap D)^{I}=C^{I}\cap D^{I}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $(\forall R.C)^{I}=\{a^{I}\in\Delta^{I}:\ (a^{I},b^{I})\in R^{I}\implies b^{I}\in C^{I}$
\end_inset

} 
\end_layout

\begin_layout Standard
es.
 
\begin_inset Formula $\forall Possiede.Cosa$
\end_inset

 cioè se a possiede un oggetto del dominio quello deve essere una cosa (slavery
 is bad)
\end_layout

\begin_layout Standard
\begin_inset Formula $(\exists R.C)^{I}=\{a^{I}\in\Delta^{I}:\ \exists b\in\Delta^{I}:\ (a^{I},b^{I})\in R^{I}\wedge b^{I}\in C^{I}\}$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
es.
 
\begin_inset Formula $\exists HaFiglio.Femmina$
\end_inset

 cioè l'insieme dei genitori con una figlia femmina (grow up well kid)
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Subsection
Varianti di AL
\end_layout

\begin_layout Standard
Indebolendo la logica AL si ottengono le logiche poco descrittive della
 famiglia FL:
\end_layout

\begin_layout Itemize
F L- è ottenuta da AL eliminando la negazione atomica •
\end_layout

\begin_layout Itemize
FL0 è ottenuta da FL- eliminando anche la quantificazione esistenziale
\end_layout

\begin_layout Standard
La logica AL può essere estesa aggiungendo alcuni costruttori: 
\end_layout

\begin_layout Itemize
costrutto 
\begin_inset Formula $\mathcal{U}$
\end_inset

 disgiunzione dei concetti 
\begin_inset Formula $C\sqcup D$
\end_inset


\end_layout

\begin_layout Itemize
costrutto 
\begin_inset Formula $\mathcal{E}$
\end_inset

 quantificazione esistenziale qualificata 
\begin_inset Formula $\exists R.C$
\end_inset


\end_layout

\begin_layout Itemize
costrutto 
\begin_inset Formula $\mathcal{C}$
\end_inset

 complemento di concetti complessi 
\begin_inset Formula $\neg C$
\end_inset


\end_layout

\begin_layout Itemize
costrutto 
\begin_inset Formula $\mathcal{N}$
\end_inset

 cardinalità di un ruolo 
\end_layout

\begin_layout Standard
\begin_inset Formula $(\leq nR)^{I}=\{a^{I}:\ \cardinal{\{b^{I}:\ (a^{I},b^{I})\in R^{I}\}}<n\}$
\end_inset


\end_layout

\begin_layout Standard
es.
 
\begin_inset Formula $(\leq2HaFiglio)^{I}$
\end_inset

 è l'insieme delle persone un numero di figli minore o uguale a 2.
\end_layout

\begin_layout Section
Confronti fra logiche 
\end_layout

\begin_layout Standard
In modo analogo a quanto si era fatto con le logiche derivate da K, denotiamo
 con ALX la logica AL a cui si aggiunge il costrutto X
\end_layout

\begin_layout Subsection
Equivalenza 
\begin_inset Formula $\alue$
\end_inset

ed 
\begin_inset Formula $\alc$
\end_inset


\end_layout

\begin_layout Standard
Dimostriamo che 
\begin_inset Formula $AL\mathcal{UE}\equiv AL\mathcal{C}$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
IP) 
\begin_inset Formula $\mathcal{UE}$
\end_inset


\end_layout

\begin_layout Standard
Ts)
\begin_inset Formula $\mathcal{C}$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Si vuole mostrate che a partire in
\begin_inset Formula $AL\mathcal{UE}$
\end_inset

 posso fare tutto ciò che faccio in 
\begin_inset Formula $AL\mathcal{C}$
\end_inset

, il che si riduce a mostrare che in 
\begin_inset Formula $\alue$
\end_inset

posso fare negazioni di concetti qualsiasi.
\end_layout

\begin_layout Standard
Questo è immediato per i concetti atomici la cui negazione è per definizione
 in 
\begin_inset Formula $AL$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\neg\top\equiv\bot$
\end_inset

, 
\begin_inset Formula $\neg\bot\equiv\top$
\end_inset


\end_layout

\begin_layout Standard
Per negare l'and di due concetti:
\end_layout

\begin_layout Standard
\begin_inset Formula $\neg(D\sqcap E)\equiv\neg D\sqcup\neg E$
\end_inset

 che sono concetti più semplici di cui ricorsivamente posso costruire la
 negazione
\end_layout

\begin_layout Standard
\begin_inset Formula $\neg\forall R.C\equiv\exists R.\neg C$
\end_inset


\end_layout

\begin_layout Standard
Con queste semplici trasformazioni posso rendere ricorsivamente più semplice
 una qualsiasi formula di 
\begin_inset Formula $\alc$
\end_inset

 fino a portarla in una formula di 
\begin_inset Formula $\alue$
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

IP) 
\begin_inset Formula $\mathcal{C}$
\end_inset


\end_layout

\begin_layout Standard
Ts)
\begin_inset Formula $\mathcal{UE}$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Sfruttando De Morgan possiamo scrivere:
\end_layout

\begin_layout Standard
\begin_inset Formula $D\sqcup E\equiv\neg(\neg D\sqcap\neg E)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\exists R.C\equiv\neg(\forall R.\neg C)$
\end_inset


\end_layout

\begin_layout Subsection
Confronto con logica del prim ordine
\end_layout

\begin_layout Standard
È possibile vedere le logiche AL, ALC, ALN, (deve essere con identità nel
 caso di N)
\end_layout

\begin_layout Itemize
A è un concetto: 
\begin_inset Formula $a(x)$
\end_inset


\end_layout

\begin_layout Itemize
R è un ruolo: 
\begin_inset Formula $R(x,y)$
\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Formula $a\ $
\end_inset

è un individuo: 
\begin_inset Formula $a$
\end_inset

 è una costante
\end_layout

\begin_layout Standard
Notiamo che ci sono due sole variabili libere e il dominio è fissato (controllar
e) la logica del prim ordine è decibile.
\end_layout

\begin_layout Description
\begin_inset Formula $\neg C$
\end_inset

: 
\begin_inset Formula $\neg C(x)$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $C\sqcap D\mathbf{:}$
\end_inset

 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\lang english

\begin_inset Formula $C(x)\vee D(x)$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $\forall R.C$
\end_inset

: 
\begin_inset Formula $\forall y:(R(x,y)\implies C(y)$
\end_inset

)
\end_layout

\begin_layout Description
\begin_inset Formula $\exists R.C:$
\end_inset

 
\begin_inset Formula $\exists y:(R(x,y)\implies C(y))$
\end_inset


\end_layout

\begin_layout Description
\begin_inset Formula $\leq nR$
\end_inset


\begin_inset Formula $,$
\end_inset

 la logica deve essere con unità cioè avere un predicato di uguaglianza
 E
\end_layout

\begin_layout Description
\begin_inset Formula $\exists x_{1},\ x_{2},...,\ x_{n+1}(R(x,x_{1})\wedge R(x,x_{2})\wedge\dots R(x,x_{n})$
\end_inset

 
\begin_inset Formula $\implies E(x_{1},x_{2})\vee E(x_{1},x_{2})\vee\dots..\underset{1\leq i\leq j\leq n+1}{\bigvee}E(x_{i},x_{j})$
\end_inset


\end_layout

\begin_layout Subsection
Confronto con logica multimodale
\end_layout

\begin_layout Standard
\noindent
L'espressività di ALC è la stessa di 
\begin_inset Formula $K_{n}$
\end_inset

 
\end_layout

\begin_layout Standard
\noindent
Infatti ogni ruolo 
\begin_inset Formula $R_{i}$
\end_inset

 si può mettere in corrispondenza con 
\begin_inset Formula $[R_{i}]c$
\end_inset


\end_layout

\begin_layout Section
Terminologia
\end_layout

\begin_layout Itemize
Definizione: 
\end_layout

\begin_layout Standard
Una definizione associa a un concetto atomico un concetto complesso (non
 atomico) es.
 
\begin_inset Formula $Parent\equiv Father\sqcup Mather$
\end_inset

, il concetto atomico viene detto anche simbolo nominale
\end_layout

\begin_layout Itemize
Simbolo di base (o nominale):
\end_layout

\begin_layout Standard
I ruoli e i concetti che appaiono solo nelle parti destre delle definizioni
\end_layout

\begin_layout Itemize
Interpretazione di base:
\end_layout

\begin_layout Standard
Un'interpretazione di una T-Box che interpreta solo i simboli di base
\end_layout

\begin_layout Itemize
Aciclico:
\end_layout

\begin_layout Standard
Nessun simbolo nominale usa sé stesso
\end_layout

\begin_layout Itemize
T-Box definitorio:
\end_layout

\begin_layout Standard
La sua interpretazione si estende in modo unico a una interpreatazione di
 tutto il t-box (estesa)
\end_layout

\begin_layout Standard
Un T-Box è definitorio se è possibile costruirne uno equivalente ma aciclico
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Non sono definitorie alcune T cicliche es.
\end_layout

\begin_layout Standard
\begin_inset Formula $Human\equiv Animal\sqcap\forall hasParent.Human$
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Ma alcune T cicliche sono definitorie es.
\end_layout

\begin_layout Standard
\begin_inset Formula $A\equiv B\sqcap\exists R.(A\sqcap\neg A)$
\end_inset

 che è equivalente a:
\end_layout

\begin_layout Standard
\begin_inset Formula $A\equiv B\sqcap\exists R.(\bot)$
\end_inset

 
\end_layout

\begin_layout Section
Terminologia generalizzata
\end_layout

\begin_layout Standard
A volte è possibile aggiungere nuovi operatori qua descritti.
\end_layout

\begin_layout Standard

\series bold
Inclusione
\end_layout

\begin_layout Standard
Si possono usare T-Box del tipo:
\end_layout

\begin_layout Standard
\begin_inset Formula $A\sqsubseteq B$
\end_inset

 che vale se e solo se 
\begin_inset Formula $A^{I}\subseteq B^{I}$
\end_inset


\end_layout

\begin_layout Standard
Una terminologia T generalizzata (cioè che contiene assiomi di inclusione)
 può essere tradotta in una forma T normalizzata sostituendo le forme del
 tipo:
\end_layout

\begin_layout Standard
\begin_inset Formula $Woman\sqsubseteq Person$
\end_inset

 con 
\begin_inset Formula $Woman\mbox{\equiv}\underline{Woman}\sqcap Person$
\end_inset

 dove 
\begin_inset Formula $\underline{Woman}$
\end_inset

 è un nuovo simbolo base (che denota qualità specifiche)
\end_layout

\begin_layout Standard
In termini di espressività, le due forme sono equivalenti
\end_layout

\begin_layout Standard
Ogni modello di 
\begin_inset Formula $T$
\end_inset

 è anche modello di 
\begin_inset Formula $\underline{T}$
\end_inset


\end_layout

\begin_layout Standard
Qualsiasi interpretazione base di un modello di 
\begin_inset Formula $T$
\end_inset

 è anche interpretazione base di un modello di 
\begin_inset Formula $\underline{T}$
\end_inset


\end_layout

\begin_layout Standard
Così facendo si ha che: 
\begin_inset Formula $Woman^{I}\subseteq Person^{I}$
\end_inset

 e quindi 
\begin_inset Formula $Woman^{I}\equiv Person\cap(\underline{Woman})^{I}$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Set
\end_layout

\begin_layout Standard
\begin_inset Formula $Set{a_{1},a_{2},\dots,a_{n}}^{I}=\{a_{1}^{I},a_{2}^{I},\dots,a_{n}^{I}\}$
\end_inset


\end_layout

\begin_layout Standard

\series bold
Fills
\end_layout

\begin_layout Standard
\begin_inset Formula $Fills\ r\ c$
\end_inset

 sono gli individui che sono in relazione tramite 
\begin_inset Formula $r$
\end_inset

 agli individui identificati da 
\begin_inset Formula $c$
\end_inset


\end_layout

\begin_layout Standard
es.
 
\begin_inset Formula $FILLS\ :\ Child\ Chris$
\end_inset

 sono tutti gli individui con figlio 
\begin_inset Quotes eld
\end_inset

Chris
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $(Fills\ R:a)^{I}=\{b\in\Delta^{I}\;:\ (a^{I},b^{I})\in R^{I}\}$
\end_inset


\end_layout

\begin_layout Subsection
Note
\end_layout

\begin_layout Standard
\begin_inset Formula $\exists R.C$
\end_inset

 si può sostituire con 
\begin_inset Formula $\exists R.Set(a)$
\end_inset


\end_layout

\begin_layout Standard
Posso pensare i T-Box come composti solo di definizioni
\end_layout

\begin_layout Standard
Il T-Box può essere tolto del tutto specificando completamente le definizioni
 nell'A-Box
\end_layout

\begin_layout Standard
Normalmente nelle Logiche Descrittive si fa l'UNA: l'unicity name assunction
 cioè si assume che se si usano due nomi come a, b, allora 
\begin_inset Formula $a^{I}\neq b^{I}$
\end_inset


\end_layout

\begin_layout Section
Servizi di Reasoning
\end_layout

\begin_layout Standard
I servizi di reasoning si propongono di risolvono quattro tipi di problemi
\end_layout

\begin_layout Standard

\series bold
Soddifisfacibilità: 
\series default
Un concetto C si dice soddisfacibile rispetto al T-Box T se esiste un modello
 di T tale che 
\begin_inset Formula $C^{I}$
\end_inset

 non è vuoto
\end_layout

\begin_layout Standard

\series bold
Sussunzione: 
\series default
Un concetto C è sussunto da un concetto D, in T se 
\begin_inset Formula $C^{I}\subseteq D^{I}$
\end_inset

 per ogni modello di T
\end_layout

\begin_layout Standard

\series bold
Equivalenze: 
\series default
Due concetti C e D si dicono equivalenti rispetto a T se 
\begin_inset Formula $C^{I}=D^{I}$
\end_inset

per ogni modello di T
\end_layout

\begin_layout Standard

\series bold
Disgiunzione: 
\series default
Due concetti C e D sono disgiunti tispetto a T se 
\begin_inset Formula $C^{I}\cap D^{I}=\emptyset$
\end_inset

 per ogni modello di T
\end_layout

\begin_layout Standard
Mostriamo che una KB che fornisce il servizio di sussunzione risolve anche
 gli altri tre problemi, infatti:
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $C$
\end_inset

 è insoddisfacibile se e solo se 
\begin_inset Formula $\bot\sqsubseteq C$
\end_inset

 
\end_layout

\begin_layout Standard
\begin_inset Formula $C,D$
\end_inset

sono equivalenti se 
\begin_inset Formula $C\sqsubseteq D$
\end_inset

 e 
\begin_inset Formula $D\sqsubseteq C$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $C,D$
\end_inset

sono disgiunti se 
\begin_inset Formula $C\sqcap D\sqsubseteq\bot$
\end_inset


\end_layout

\begin_layout Section
Feauture Logic
\end_layout

\begin_layout Standard
Le logiche descrittive più semplici appartengono alla famiglia della features
 logics (FL in breve) e sono ottenute indebolendo la più ́famosa logica
 AL inibendo i costruttori di concetto più complessi.
\end_layout

\begin_layout Standard
La più semplice di queste è 
\begin_inset Formula $FL_{0}$
\end_inset

 che si ottiene da AL togliendo 
\begin_inset Formula $\bot$
\end_inset

 e 
\begin_inset Formula $\exists$
\end_inset


\end_layout

\begin_layout Standard
Un concetto in 
\series bold
forma normale 
\series default
è del tipo:
\end_layout

\begin_layout Standard
\begin_inset Formula $A_{1}\sqcap A_{2}\sqcap\dot{\dots A_{n}\forall R_{1}.C_{1}\sqcap\forall R_{2}.C_{2}\dots\sqcap\forall R_{m}.C_{m}}$
\end_inset


\end_layout

\begin_layout Standard
dove 
\begin_inset Formula $C_{j}$
\end_inset

 sono concetti in forma normale e 
\begin_inset Formula $R_{j}$
\end_inset

 sono ruoli atomici
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Posso scrivere qualsiasi concetto in questo modo con l'accortezza di:
\end_layout

\begin_layout Standard
togliere i duplicati: 
\begin_inset Formula $A_{i}\neq A_{j}$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

sciogliere
\begin_inset Quotes erd
\end_inset

 i ruoli con intersezioni: 
\end_layout

\begin_layout Standard
\begin_inset Formula $\forall R.(C\sqcap D)\equiv\forall R.C\sqcap\forall R.D$
\end_inset


\end_layout

\begin_layout Standard
	
\end_layout

\begin_layout Standard
Siano C e D due concetti 
\begin_inset Formula $FL_{0}$
\end_inset

 in forma normale: 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $C\equiv A_{1}\sqcap\dots\sqcap A_{m}\sqcap\forall R1.C1\sqcap\forall Rn.Cn$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $D\equiv B1\sqcap\dots\sqcap Bk\sqcap\forall S1.D1\sqcap\forall Sl.Dl$
\end_inset

	
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
allora 
\begin_inset Formula $C\sqsubseteq D$
\end_inset

 se e solo se 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
1.
 per ogni i, 
\begin_inset Formula $1\leq i\leq k$
\end_inset

 esiste un j, 
\begin_inset Formula $1\leq j\leq m$
\end_inset

 per il quale 
\begin_inset Formula $Bi=Aj$
\end_inset

.
\end_layout

\begin_layout Standard
2.
 per ogni i, 
\begin_inset Formula $1\leq i\leq l$
\end_inset

 esiste un j, 
\begin_inset Formula $1\leq j\leq n$
\end_inset

 per il quale 
\begin_inset Formula $Si=Rj$
\end_inset

 e
\begin_inset Formula $Cj\sqsubseteq Di$
\end_inset

.
\end_layout

\begin_layout Subsection
Varianti
\end_layout

\begin_layout Standard
Ad 
\begin_inset Formula $AL_{0}$
\end_inset

può essere aggiunto il concetto 
\begin_inset Formula $\bot$
\end_inset

, ottenendo 
\begin_inset Formula $AL_{\bot}$
\end_inset

e la forma normale viene a essere la stessa di prima a cui si aggiunge l'opportu
nità per un concetto di essere o
\begin_inset Formula $\bot$
\end_inset


\end_layout

\begin_layout Standard
Notiamo che 
\begin_inset Formula $\bot\sqsubseteq C$
\end_inset

, per ogni 
\begin_inset Formula $C$
\end_inset


\end_layout

\begin_layout Standard
Ad 
\begin_inset Formula $AL_{0}$
\end_inset

 si può aggiungere la negazione di concetti atomici ottenendo 
\begin_inset Formula $AL_{\neg}$
\end_inset


\end_layout

\begin_layout Standard
Notiamo che 
\begin_inset Formula $\bot\equiv A\wedge\neg A$
\end_inset

, quindi 
\begin_inset Formula $AL_{\neg}$
\end_inset

contiene strettamente
\begin_inset Formula $AL_{0}$
\end_inset

	
\end_layout

\begin_layout Standard
In 
\begin_inset Formula $ALC$
\end_inset

 per verificare se 
\begin_inset Formula $C\sqsubseteq D$
\end_inset

 possiamo controllare che 
\begin_inset Formula $C\sqcap\neg D$
\end_inset

 si insoddisfacibile
\end_layout

\begin_layout Standard
Per controllare 
\begin_inset Formula $C\equiv D$
\end_inset

 possiamo quindi testare 
\begin_inset Formula $C\sqcap\neg D$
\end_inset

 e 
\begin_inset Formula $D\sqcap\neg C$
\end_inset

.
\end_layout

\begin_layout Section
A-Box Reasoning
\end_layout

\begin_layout Standard
	I servizi di reasoning di A-Box sono:
\end_layout

\begin_layout Standard

\series bold
Consistenza
\series default
: Un A-Box è consistente in un modello T-Box T se c'è un'interpreatzione
 che sia modello sia di T che di A
\end_layout

\begin_layout Standard

\series bold
Instance Checking
\series default
: Un individuo è istanza di un concetto C rispetto a un A-Box A se è membro
 dell'insieme C.
 
\begin_inset Formula $\vera A{C(a)}$
\end_inset

 il che vale se e solo se 
\begin_inset Formula $A\cup\{\neg C(a)\}$
\end_inset

 è insoddisfacibile
\end_layout

\begin_layout Standard

\series bold
Instance Retrivial
\series default
: Trova tutti gli individui che sono istanze di una data descrizione
\end_layout

\begin_layout Standard

\series bold
Problema di Realizzazione
\series default
: Trova il concetto più specifico a cui un individuo appartiene
\end_layout

\begin_layout Subsection
Variante
\end_layout

\begin_layout Standard
T-Box ed A-Box si possono arricchire con 
\begin_inset Formula $C\implies D$
\end_inset

 cioè: per ogni individuo 
\begin_inset Formula $a$
\end_inset

 cui è noto 
\begin_inset Formula $C(a)$
\end_inset

 si ha anche 
\begin_inset Formula $D(a)$
\end_inset

.
\end_layout

\begin_layout Standard
Notiamo che NON vale 
\begin_inset Formula $\neg D\implies\neg C$
\end_inset


\end_layout

\begin_layout Standard
		
\end_layout

\end_body
\end_document
